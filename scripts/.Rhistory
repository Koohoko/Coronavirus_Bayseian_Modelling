library(Biostrings)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("SynMut")
library(Biostrings)
data <- readDNAStringSet("../data/CdsFastaResults.zip")
data <- readDNAStringSet("../data/914441665332-CdsFastaResults.fasta")
names(data)
head(names(data))
install.packages("installr")
install.packages("installr")
BiocManager::install("SynMut")
install.packages('installr')
library("installr")
install.packages("installr")
knitr::opts_chunk$set(echo = TRUE)
library(Biostrings)
## Explore data
```{r, message=FALSE}
---
title: "Bayesian Modelling on CpG Dinucleotide Frequency Among Different Hosts on the Genomes of Coronavirus"
author: "Haogao Gu"
date: "7/11/2019"
output: html_document
---
knitr::opts_chunk$set(echo = TRUE)
library(Biostrings)
data <- readDNAStringSet("../data/71698491902-CdsFastaResults.fasta")
data
install.packages("codetools")
knitr::opts_chunk$set(echo = TRUE, cache=TRUE)
names(data)
length(data)
duplicated(names(data))
data[!duplicated(names(data))]
width(data)
data
data[!duplicated(names(data))]
# we remove replicated sequneces by accession number.
sum(!duplicated(names(data)))
# we remove replicated sequneces by accession number.
sum(duplicated(names(data)))/length(data)
data <- data[!duplicated(names(data))]
# the length of the sequences should be over 3000nt.
width(data)
data
data[1]
as.character(data[1])
# the length of the sequences should be over 3000nt.
data(width(data) > 3000)/length(data)
# the length of the sequences should be over 3000nt.
sum(width(data) > 3000)/length(data)
# the length of the sequences should be over 3000nt.
sum(width(data) <= 3000)/length(data)
data <- data[width(data) > 3000]
alphabet(data)
lapply(data, alphabet)
lapply(data, alphabetFrequency)
alphabetFrequency(data[1])
alphabetFrequency(data[1])[4:]
alphabet()
alphabet(data[1])
length(alphabet(data[1]))
alphabetFrequency(data[1])[4:18]
check_nsb <- lapply(data, function(x){ # check non-standard bases in the sequneces
sum(alphabetFrequency(x)[5:18]) > 0
})
unlist(check_nsb)
data <- data[!unlist(check_nsb)] # keep only sequnece with standard bases.
render("index.rmd")
library(rmarkdown)
render("index.rmd")
render("index.rmd")
